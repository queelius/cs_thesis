TODO:
    * new inputs to vary: freq error (like location uncertainty) AND junk factor
        
    * mention how obfuscations destroys recall/precision for boolean
        -- only relevancy (bm25, mindist) scoring usable
        
        -- ALSO: high fp rate is nice since even obfuscated terms will match,
            which makes it difficult to determine which are obfuscations. and
            as long as this high fp rate doesn't effect map too much, all the
            better.
            
    * mention heap's law and zipf's law with respect to doc/corpus generation
    * mention min/max block size with respect to mindist for queries

    * use/fix consistent color coding
        psip: blue
        psib: red
        psif: green
        bsib: yellow
        psim: black


        
history vs accuracy (attack) using P(ob)=0.1

secrets vs accuracy : P(ob) = {.1, .3, .5}

advantage:

    mean average precision: P[map < x | n documents permuted randomly]



    score / random_score

    worst-case: return docs in reverse order: if n docs,
    
        worst(n) = 1/n(2/{n+2} + 4/{n+4} + ... + {n-2}/{2n-2} + 1/2)
        
        lim n->inf  worst(n) = 0
        
        worst(2) = 1/2()
        
        
location uncertain for mindist
size of doc -- how does this effect mean average precision calcs? see: advantage



--monte_carlo_samples=100000 --history_size=500000 --vocabulary_size=50 --simulate_obfuscations=0 --num_obfuscations=0 --num_secrets=10 --trials=1







// TODO: let block 0 be a meta-data block, no location property -> title, author, manually added keywords
// heap's law'






terms/query vs mindist lag (1,2 words/term)
terms/query vs mindist map (1,2 words/term)

terms/query vs mindist lag (3 words/term)
terms/query vs mindist map (3 words/term)

terms/query vs mindist lag (4 words/term)
terms/query vs mindist map (4 words/term)

TODO: for terms/query vs mindist lag/map, add terms=4,5
TODO: for terms/query vs mindist lag/map, add psip_rev data set
TODO: for terms/query vs bm25/mindist lag/map, add terms={1,2}, 3, 4, 5 (holistic)
    
words/term vs bm25 map/lag
TODO: words/term vs mindist map/lag

obfuscations vs bm25 map
obfuscations vs bm25 lag
TODO: obfuscations vs mindist map/lag [NOTE: need new experiment data]
    
corpus size (# docs) vs BM25 lag [resolved -- missing test cases for which bsib was slow on]
corpus size (# docs) vs BM25 map

corpus size (# docs) vs Mindist lag [resolved -- missing test cases for which bsib was slow on]
corpus size (# docs) vs Mindist map
    
size ratio (index size : corpus size) vs BM25 map
TODO: size ratio (index size : corpus size) vs Mindist map

Mindist map/lag vs Location Uncertainty
Mindist (1,2-gram terms) map/lag vs Location Uncertainty

BM25 map/lag vs Location Uncertainty

words/doc vs load/build time
words/doc vs index size
TODO: words/doc vs bm25 map
TODO: words/doc vs bm25 map
TODO: secrets vs size
TODO: secrets vs lag
      
to-do:

    * use/fix consistent color coding
        psip: blue
        psib: red
        psif: green
        bsib: yellow
        psim: black
        
    * mention how obfuscations destroys recall/precision for boolean
        -- only relevancy (bm25, mindist) scoring usable
        
        -- ALSO: high fp rate is nice since even obfuscated terms will match,
            which makes it difficult to determine which are obfuscations. and
            as long as this high fp rate doesn't effect map too much, all the
            better.
        
    * add experiment for obfuscation vs min_dist map
        psib, psip, bsib
        min_terms=max_terms=1
        min_tokens=1, max_tokens=2
        loc_uncertainty=125
        secrets=125
        max_tokens_doc=1000, min_tokens_doc=4000
        num_docs=100
        fp_rate=.001
        
