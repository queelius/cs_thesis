
P[ci|e1, e2, ..., ek] = P[e1, e2, ..., ek|ci] x P[ci] / P[e1, e2, ..., ek]

naive assumption:
P[ci|e1, e2, ..., ek] = P[e1|ci] x P[e2|ci] x ... x P[ek|ci] x P[ci] / P[e1, e2, ..., ek]

plain query pdf distribution (KNOWN)
------------------------------------
ex:
a .4   4/10
b .3   3/10
c .2   2/10
d .1   1/10

this plain query pdf distribution is known by
the attacker. plain queries are transformed into
hidden queries. this induces an unknown hidden
query distribution.

===
unknown mapping; 4 words; 1 secret trapdoors per word; 
a -> 1
b -> 2
c -> 3
d -> 4

unknown hidden query pdf distribution:
1 -> .4
2 -> .3
3 -> .2
4 -> .1

P[a=1,b=2,c=3,d=4|hq1, hq2, ..., hqk] = P[hq1|a=1,b=2,c=3,d=4] x P[hq2|a=1,b=2,c=3,d=4] x ... x P[hqk|a=1,b=2,c=3,d=4] x P[a=1,b=2,c=3,d=4] / P[hq1, hq2, ..., hqk]

let's throw out the denominator and maximize likelihood:

argmax{i,j,k,l} P[a=i,b=j,c=k,d=l|hq1, hq2, ..., hqk] = P[hq1|a=i,b=j,c=k,d=l] x ... x P[hqk|a=i,b=j,c=k,d=l] x P[a=i,b=j,c=k,d=l]

// P[a=1,b=2,c=3,d=4|hq1, hq2, ..., hqk] = P[hq1|a=1,b=2,c=3,d=4] x ... x P[hqk|a=1,b=2,c=3,d=4] x P[a=1,b=2,c=3,d=4]

5 hidden queries; 2 hidden terms per query

q1 = (a, b) -> hq1 = (1, 2)
q2 = (a, b) -> hq2 = (1, 2)
q3 = (a, c) -> hq3 = (1, 3)
q4 = (a, c) -> hq4 = (1, 3)
q5 = (b, d) -> hq5 = (2, 4)

P[hq1|a=1,b=2,c=3,d=4] = .4 * .3
P[hq2|a=1,b=2,c=3,d=4] = .4 * .3
P[hq3|a=1,b=2,c=3,d=4] = .4 * .2
P[hq4|a=1,b=2,c=3,d=4] = .4 * .2
P[hq5|a=1,b=2,c=3,d=4] = .3 * .1
likelihood: 2.7648 × 10^-6

P[hq1|a=4,b=3,c=2,d=1] = .1 * .2
P[hq2|a=4,b=3,c=2,d=1] = .1 * .2
P[hq3|a=4,b=3,c=2,d=1] = .1 * .3
P[hq4|a=4,b=3,c=2,d=1] = .1 * .3
P[hq5|a=4,b=3,c=2,d=1] = .2 * .4
likelihood: 2.88 × 10^-8

P[hq1|a=2,b=1,c=3,d=4] = .3 * .4
P[hq2|a=2,b=1,c=3,d=4] = .3 * .4
P[hq3|a=2,b=1,c=3,d=4] = .3 * .2
P[hq4|a=2,b=1,c=3,d=4] = .3 * .2
P[hq5|a=2,b=1,c=3,d=4] = .4 * .1
likelihood: 2.0736 × 10^-6

the highest likelihood is for assignment (a=1,b=2,c=3,d=4). in general, given hq1, hq2, ..., hqk,
calculate likelihood for each assignment (a=i, b=j, c=k, d=l).

there are 4!=24 such assignments

how many hidden query samples are expected to be needed until the likelihood of the correct assignment
is the maximum likelihood?

simulate hidden query history (where plain terms are sampled from known pdf distribution) and calculate
likelihoods at each step. on average, what is the size of the history before the max likelihood is correct?


---
4 words; 2 secret trapdoors per word
a -> 1 2
b -> 3 4
c -> 5 6
d -> 7 8

